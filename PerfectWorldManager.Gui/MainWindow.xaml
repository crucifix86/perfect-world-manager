<Window x:Class="PerfectWorldManager.Gui.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PerfectWorldManager.Gui"
        xmlns:converters="clr-namespace:PerfectWorldManager.Gui.Converters"
        xmlns:core="clr-namespace:PerfectWorldManager.Core;assembly=PerfectWorldManager.Core"
        mc:Ignorable="d"
        Title="{DynamicResource MainWindow_Title}" Height="700" Width="1000"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        ResizeMode="CanResizeWithGrip">
    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:BooleanToRunningStatusConverter x:Key="BooleanToRunningStatusConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Window.Resources>
    <Border BorderBrush="{StaticResource ModernBorderBrush}" BorderThickness="1" Background="{StaticResource ModernBackgroundBrush}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!-- Custom Title Bar -->
            <Grid Grid.Row="0" Background="{StaticResource ModernLighterBackgroundBrush}" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- App Icon and Title -->
                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="8,0">
                    <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Title}" 
                               VerticalAlignment="Center" FontSize="14" Foreground="{StaticResource ModernForegroundBrush}"/>
                </StackPanel>
                
                <!-- Window Control Buttons -->
                <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <Button x:Name="MinimizeButton" Content="─" Width="46" Height="32" 
                            Click="MinimizeButton_Click" 
                            Style="{StaticResource WindowControlButtonStyle}"/>
                    <Button x:Name="MaximizeButton" Content="☐" Width="46" Height="32" 
                            Click="MaximizeButton_Click" 
                            Style="{StaticResource WindowControlButtonStyle}"/>
                    <Button x:Name="CloseButton" Content="✕" Width="46" Height="32" 
                            Click="CloseButton_Click" 
                            Style="{StaticResource WindowCloseButtonStyle}"/>
                </StackPanel>
            </Grid>
            
            <!-- Main Content -->
            <TabControl Grid.Row="1" x:Name="MainTabControl" SelectionChanged="MainTabControl_SelectionChanged">
            <TabItem Header="{DynamicResource Tab_Dashboard}" x:Name="DashboardTab">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <!-- Quick Actions Bar -->
                        <Border Grid.Row="0" Style="{StaticResource ModernCard}" Margin="8,8,8,0">
                            <StackPanel>
                                <TextBlock Text="Quick Actions" FontSize="16" FontWeight="SemiBold" Margin="0,0,0,12" Foreground="{DynamicResource ModernAccentBrush}"/>
                                <WrapPanel>
                                    <Button Content="{DynamicResource Dashboard_ConnectDaemon}" 
                                            x:Name="ConnectDaemonButton" 
                                            Margin="0,0,8,0" 
                                            Padding="12,8" 
                                            Click="ConnectDaemonButton_Click" 
                                            ToolTip="Initialize connection to the management daemon"
                                            Style="{StaticResource AccentButtonStyle}"/>
                                    <Button Content="{DynamicResource Dashboard_RefreshStatus}" 
                                            x:Name="RefreshStatusButton" 
                                            Margin="0,0,8,0" 
                                            Padding="12,8" 
                                            Click="RefreshStatusButton_Click"/>
                                    <Button Content="{DynamicResource Dashboard_StartAllServices}" 
                                            x:Name="StartAllServicesButton" 
                                            Margin="0,0,8,0" 
                                            Padding="12,8" 
                                            Background="{DynamicResource ModernSuccessBrush}" 
                                            Click="StartAllServicesButton_Click"/>
                                    <Button Content="{DynamicResource Dashboard_StopAllServices}" 
                                            x:Name="StopAllServicesButton" 
                                            Padding="12,8" 
                                            Background="{DynamicResource ModernErrorBrush}" 
                                            Click="StopAllServicesButton_Click"/>
                                </WrapPanel>
                            </StackPanel>
                        </Border>
                        
                        <!-- Status Overview Cards -->
                        <UniformGrid Grid.Row="1" Rows="1" Columns="4" Margin="0,8,0,0">
                            <Border Style="{StaticResource ModernCard}" Margin="8,0,4,0">
                                <StackPanel>
                                    <TextBlock Text="Total Services" FontSize="12" Opacity="0.7"/>
                                    <TextBlock Text="{Binding ServerProcesses.Count}" FontSize="28" FontWeight="Bold" Foreground="{DynamicResource ModernAccentBrush}"/>
                                </StackPanel>
                            </Border>
                            <Border Style="{StaticResource ModernCard}" Margin="4,0">
                                <StackPanel>
                                    <TextBlock Text="Running" FontSize="12" Opacity="0.7"/>
                                    <TextBlock x:Name="RunningCountText" Text="0" FontSize="28" FontWeight="Bold" Foreground="{DynamicResource ModernSuccessBrush}"/>
                                </StackPanel>
                            </Border>
                            <Border Style="{StaticResource ModernCard}" Margin="4,0">
                                <StackPanel>
                                    <TextBlock Text="Stopped" FontSize="12" Opacity="0.7"/>
                                    <TextBlock x:Name="StoppedCountText" Text="0" FontSize="28" FontWeight="Bold" Foreground="{DynamicResource ModernErrorBrush}"/>
                                </StackPanel>
                            </Border>
                            <Border Style="{StaticResource ModernCard}" Margin="4,0,8,0">
                                <StackPanel>
                                    <TextBlock Text="Connection" FontSize="12" Opacity="0.7"/>
                                    <StackPanel Orientation="Horizontal">
                                        <Ellipse x:Name="ConnectionIndicator" Width="16" Height="16" Fill="{DynamicResource ModernErrorBrush}" Margin="0,0,8,0"/>
                                        <TextBlock x:Name="ConnectionStatusText" Text="Disconnected" FontSize="14" FontWeight="SemiBold" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </UniformGrid>
                        
                        <!-- Services List -->
                        <Border Grid.Row="2" Style="{StaticResource ModernCard}" Margin="8">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="Services" FontSize="16" FontWeight="SemiBold" Margin="0,0,0,12" Foreground="{DynamicResource ModernAccentBrush}"/>
                                <ListView Name="ProcessListView" Grid.Row="1" ItemsSource="{Binding ServerProcesses}" Background="Transparent" BorderThickness="0">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="{DynamicResource Dashboard_ProcessName}" Width="200" DisplayMemberBinding="{Binding DisplayName}"/>
                                <GridViewColumn Header="{DynamicResource Dashboard_Status}" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Status}" FontWeight="Bold">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Status}" Value="Running">
                                                                <Setter Property="Foreground" Value="Green"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Status}" Value="Stopped">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Status}" Value="Unknown">
                                                                <Setter Property="Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Status}" Value="Error">
                                                                <Setter Property="Foreground" Value="OrangeRed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Status}" Value="Starting">
                                                                <Setter Property="Foreground" Value="DarkBlue"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Status}" Value="Stopping">
                                                                <Setter Property="Foreground" Value="DarkGoldenrod"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="PID" Width="200" DisplayMemberBinding="{Binding StatusDetails}"/>
                                <GridViewColumn Header="{DynamicResource Dashboard_Actions}" Width="150">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Button Content="{DynamicResource Dashboard_Start}" Margin="2" Tag="{Binding}" Click="StartSingleProcessButton_Click"/>
                                                <Button Content="{DynamicResource Dashboard_Stop}" Margin="2" Tag="{Binding}" Click="StopSingleProcessButton_Click"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                            </Grid>
                        </Border>
                        
                    <StatusBar Grid.Row="3">
                        <StatusBarItem>
                            <TextBlock Name="StatusBarText" Text="{DynamicResource Text_Ready}"/>
                        </StatusBarItem>
                    </StatusBar>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="{DynamicResource Tab_Settings}" x:Name="SettingsTab">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="5">
                    <StackPanel Margin="10" Name="SettingsPanel">

                        <TextBlock Text="{DynamicResource Settings_DaemonServiceSettings}" FontWeight="Bold" Margin="0,0,0,5"/>
                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Content="{DynamicResource Settings_DaemonServiceUrl}" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="DaemonUrlTextBox" Grid.Row="0" Grid.Column="1" Margin="5" ToolTip="URL of the Perfect World Manager Daemon service (e.g., http://localhost:50051)" Text="{Binding AppSettings.DaemonServiceUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="{DynamicResource Settings_ApiKey}" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="ApiKeyTextBox" Grid.Row="1" Grid.Column="1" Margin="5" ToolTip="API Key for authenticating with the daemon." Text="{Binding AppSettings.ApiKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Name="GenerateApiKeyButton" Content="{DynamicResource Settings_GenerateApiKey}" Grid.Row="1" Grid.Column="2" Margin="5" Padding="5,2" Click="GenerateApiKeyButton_Click" VerticalAlignment="Center"/>
                            
                            <CheckBox Name="AutoConnectCheckBox" Grid.Row="2" Grid.Column="1" Margin="5" 
                                      Content="Connect automatically on startup" 
                                      IsChecked="{Binding AppSettings.AutoConnectToDaemon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ToolTip="Automatically connect to the daemon when the application starts"/>
                        </Grid>

                        <TextBlock Text="{DynamicResource Settings_ApplicationSettings}" FontWeight="Bold" Margin="0,10,0,5"/>
                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Content="{DynamicResource Settings_Language}" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                            <ComboBox Name="LanguageSelectorComboBox" Grid.Row="0" Grid.Column="1" Width="200" Margin="5,2" SelectionChanged="LanguageSelectorComboBox_SelectionChanged" VerticalAlignment="Center" HorizontalAlignment="Left">
                                <ComboBoxItem Content="English" Tag="en-US"/>
                                <ComboBoxItem Content="Bahasa Indonesia" Tag="id-ID"/>
                                <ComboBoxItem Content="Русский" Tag="ru-RU"/>
                                <ComboBoxItem Content="Português" Tag="pt-PT"/>
                            </ComboBox>
                        </Grid>

                        <TextBlock Text="{DynamicResource Settings_ServerPathSettings}" FontWeight="Bold" Margin="0,10,0,5"/>
                        <TextBlock TextWrapping="Wrap" Margin="0,0,0,5" FontStyle="Italic" FontSize="11" Text="{DynamicResource Settings_ServerPathSettings_Desc}"/>
                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Content="{DynamicResource Settings_ServerBaseDir}" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="ServerDirTextBox" Grid.Row="0" Grid.Column="1" Margin="5,2" ToolTip="Path on the server, used as context for daemon operations." Text="{Binding AppSettings.ServerDir, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="{DynamicResource Settings_MapsFilePath}" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="MapsFilePathTextBox" Grid.Row="1" Grid.Column="1" Margin="5,2" ToolTip="Path to the local 'user_maps.csv' used by this client for map definitions." Text="{Binding AppSettings.MapsFilePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="{DynamicResource Settings_LogsDir}" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="LogsDirTextBox" Grid.Row="2" Grid.Column="1" Margin="5,2" ToolTip="Path on the server where daemon stores logs for processes it starts." Text="{Binding AppSettings.LogsDir, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="{DynamicResource Settings_PwAdminDir}" Grid.Row="3" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="PwAdminDirTextBox" Grid.Row="3" Grid.Column="1" Margin="5,2" ToolTip="Path to PWAdmin related utilities on the server (e.g., for updater script)." Text="{Binding AppSettings.PwAdminDir, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="{DynamicResource Settings_PwAdminUrl}" Grid.Row="4" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="PwAdminUrlTextBox" Grid.Row="4" Grid.Column="1" Margin="5,2" Text="{Binding AppSettings.PwAdminUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="{DynamicResource Settings_BackupStorageDir}" Grid.Row="5" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="BackupStorageDirTextBox" Grid.Row="5" Grid.Column="1" Margin="5,2" Text="{Binding AppSettings.BackupStorageDir, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>

                        <TextBlock Text="{DynamicResource Settings_CharEditorPaths}" FontWeight="Bold" Margin="0,10,0,5"/>
                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Content="{DynamicResource Settings_ItemTxtPath}" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="ItemTxtPathTextBox" Grid.Row="0" Grid.Column="1" Margin="5,2" ToolTip="Full path to your item.txt file (used by Character Editor GUI)" Text="{Binding AppSettings.ItemTxtPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="{DynamicResource Settings_ItemIconsPath}" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="ItemIconsPathTextBox" Grid.Row="1" Grid.Column="1" Margin="5,2" ToolTip="Full path to the directory containing item icons (used by Character Editor GUI)" Text="{Binding AppSettings.ItemIconsPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>

                        <TextBlock Text="{DynamicResource Settings_MySQLSettings}" FontWeight="Bold" Margin="0,10,0,5"/>
                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Content="{DynamicResource Settings_MySQLHost}" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="MySqlHostTextBox" Grid.Row="0" Grid.Column="1" Margin="5,2" Text="{Binding AppSettings.MySqlHost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Content="{DynamicResource Settings_MySQLPort}" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="MySqlPortTextBox" Grid.Row="1" Grid.Column="1" Margin="5,2" Text="{Binding AppSettings.MySqlPort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Content="{DynamicResource Settings_MySQLUser}" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="MySqlUserTextBox" Grid.Row="2" Grid.Column="1" Margin="5,2" Text="{Binding AppSettings.MySqlUser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Content="{DynamicResource Settings_MySQLPassword}" Grid.Row="3" Grid.Column="0" VerticalAlignment="Center"/>
                            <PasswordBox Name="MySqlPasswordBox" Grid.Row="3" Grid.Column="1" Margin="5,2"/>
                            <Label Content="{DynamicResource Settings_MySQLDatabase}" Grid.Row="4" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Name="MySqlDatabaseTextBox" Grid.Row="4" Grid.Column="1" Margin="5,2" Text="{Binding AppSettings.MySqlDatabase, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>

                        <Separator Margin="0,15,0,10"/>
                        <TextBlock Text="{DynamicResource Settings_ProcessConfigs}" FontWeight="Bold" Margin="0,0,0,5"/>
                        <TextBlock TextWrapping="Wrap" Margin="0,0,0,10" FontStyle="Italic" FontSize="11" Text="{DynamicResource Settings_ProcessConfigs_Desc}"/>
                        
                        <!-- Process Configurations Button -->
                        <Border Style="{StaticResource ModernCard}" Margin="0,0,0,10" Padding="15">
                            <StackPanel>
                                <TextBlock Text="Process configurations control how server processes are started and monitored." 
                                           TextWrapping="Wrap" Margin="0,0,0,10" Opacity="0.8"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Active Preset: " VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <TextBlock Text="{Binding AppSettings.ActivePresetName}" VerticalAlignment="Center" 
                                               Foreground="{StaticResource ModernAccentBrush}" FontWeight="SemiBold" Margin="5,0"/>
                                </StackPanel>
                                <Button Content="Manage Process Configurations" 
                                        Click="OpenProcessConfigWindow_Click" 
                                        Padding="15,10" 
                                        Margin="0,10,0,0"
                                        HorizontalAlignment="Left"
                                        Style="{StaticResource AccentButtonStyle}"
                                        ToolTip="Open the process configuration manager to edit settings and manage presets"/>
                            </StackPanel>
                        </Border>
                        <Button Content="{DynamicResource Settings_SaveButton}" x:Name="SaveSettingsButton" Margin="0,10,0,10" Padding="10,5" HorizontalAlignment="Left" Click="SaveSettings_Click"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="{DynamicResource Tab_Accounts}" x:Name="AccountsTab">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="20">
                        <!-- Account Management Header -->
                        <Border Style="{StaticResource ModernCard}" Margin="0,0,0,15" Padding="20">
                            <StackPanel>
                                <TextBlock Text="Account Management" FontSize="20" FontWeight="Bold" Foreground="{StaticResource ModernAccentBrush}" Margin="0,0,0,10"/>
                                <TextBlock Text="Manage user accounts, passwords, in-game currency, and administrative privileges" 
                                           TextWrapping="Wrap" Opacity="0.8"/>
                            </StackPanel>
                        </Border>

                        <!-- Main Actions Grid -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Create Account -->
                            <Border Grid.Row="0" Grid.Column="0" Style="{StaticResource ModernCard}" Padding="20">
                                <StackPanel>
                                    <TextBlock Text="{DynamicResource Accounts_CreateAccount}" FontSize="16" FontWeight="SemiBold" 
                                               Foreground="{StaticResource ModernAccentBrush}" Margin="0,0,0,15"/>
                                    
                                    <TextBlock Text="{DynamicResource Accounts_Username}" Margin="0,0,0,5" FontWeight="SemiBold"/>
                                    <TextBox Name="CreateUserUsernameTextBox" Padding="10,8" FontSize="14"/>
                                    
                                    <TextBlock Text="{DynamicResource Accounts_Password}" Margin="0,15,0,5" FontWeight="SemiBold"/>
                                    <PasswordBox Name="CreateUserPasswordBox" Padding="10,8" FontSize="14"/>
                                    
                                    <TextBlock Text="{DynamicResource Accounts_Email}" Margin="0,15,0,5" FontWeight="SemiBold"/>
                                    <TextBox Name="CreateUserEmailTextBox" Text="not_needed@example.com" Padding="10,8" FontSize="14"/>
                                    
                                    <Button Content="{DynamicResource Accounts_CreateAccount_Button}" 
                                            Name="CreateAccountButton" Click="CreateAccountButton_Click" 
                                            Margin="0,20,0,0" Padding="12,10" 
                                            Style="{StaticResource AccentButtonStyle}"/>
                                    
                                    <TextBlock Name="CreateUserStatusTextBlock" Margin="0,10,0,0" 
                                               FontWeight="SemiBold" TextWrapping="Wrap" FontSize="13"/>
                                </StackPanel>
                            </Border>

                            <!-- Add Cubi -->
                            <Border Grid.Row="0" Grid.Column="2" Style="{StaticResource ModernCard}" Padding="20">
                                <StackPanel>
                                    <TextBlock Text="{DynamicResource Accounts_AddCubi}" FontSize="16" FontWeight="SemiBold" 
                                               Foreground="{StaticResource ModernAccentBrush}" Margin="0,0,0,15"/>
                                    
                                    <TextBlock Text="{DynamicResource Accounts_Identifier}" Margin="0,0,0,5" FontWeight="SemiBold"/>
                                    <TextBox Name="AddCubiIdentifierTextBox" Padding="10,8" FontSize="14"/>
                                    
                                    <TextBlock Text="{DynamicResource Accounts_IdentifierType}" Margin="0,15,0,5" FontWeight="SemiBold"/>
                                    <ComboBox Name="AddCubiIdentifierTypeComboBox" Padding="10,8" FontSize="14">
                                        <ComboBoxItem Content="{DynamicResource Accounts_Username_Identifier}" IsSelected="True"/>
                                        <ComboBoxItem Content="{DynamicResource Accounts_UserID_Identifier}"/>
                                    </ComboBox>
                                    
                                    <TextBlock Text="{DynamicResource Accounts_Amount}" Margin="0,15,0,5" FontWeight="SemiBold"/>
                                    <TextBox Name="AddCubiAmountTextBox" PreviewTextInput="NumericTextBox_PreviewTextInput" 
                                             Padding="10,8" FontSize="14"/>
                                    
                                    <Button Content="{DynamicResource Accounts_AddCubi_Button}" 
                                            Name="AddCubiButton" Click="AddCubiButton_Click" 
                                            Margin="0,20,0,0" Padding="12,10"
                                            Background="{StaticResource ModernSuccessBrush}"/>
                                    
                                    <TextBlock Name="AddCubiStatusTextBlock" Margin="0,10,0,0" 
                                               FontWeight="SemiBold" TextWrapping="Wrap" FontSize="13"/>
                                </StackPanel>
                            </Border>

                            <!-- Change Password -->
                            <Border Grid.Row="1" Grid.Column="0" Style="{StaticResource ModernCard}" Padding="20" Margin="0,20,0,0">
                                <StackPanel>
                                    <TextBlock Text="{DynamicResource Accounts_ChangePassword}" FontSize="16" FontWeight="SemiBold" 
                                               Foreground="{StaticResource ModernAccentBrush}" Margin="0,0,0,15"/>
                                    
                                    <TextBlock Text="{DynamicResource Accounts_Username}" Margin="0,0,0,5" FontWeight="SemiBold"/>
                                    <TextBox Name="ChangePassUsernameTextBox" Padding="10,8" FontSize="14"/>
                                    
                                    <TextBlock Text="{DynamicResource Accounts_OldPassword}" Margin="0,15,0,5" FontWeight="SemiBold"/>
                                    <PasswordBox Name="ChangePassOldPasswordBox" Padding="10,8" FontSize="14"/>
                                    
                                    <TextBlock Text="{DynamicResource Accounts_NewPassword}" Margin="0,15,0,5" FontWeight="SemiBold"/>
                                    <PasswordBox Name="ChangePassNewPasswordBox" Padding="10,8" FontSize="14"/>
                                    
                                    <Button Content="{DynamicResource Accounts_ChangePassword_Button}" 
                                            Name="ChangePasswordButton" Click="ChangePasswordButton_Click" 
                                            Margin="0,20,0,0" Padding="12,10"
                                            Background="{StaticResource ModernWarningBrush}"/>
                                    
                                    <TextBlock Name="ChangePassStatusTextBlock" Margin="0,10,0,0" 
                                               FontWeight="SemiBold" TextWrapping="Wrap" FontSize="13"/>
                                </StackPanel>
                            </Border>

                            <!-- Set GM Status -->
                            <Border Grid.Row="1" Grid.Column="2" Style="{StaticResource ModernCard}" Padding="20" Margin="0,20,0,0">
                                <StackPanel>
                                    <TextBlock Text="{DynamicResource Accounts_SetGMStatus}" FontSize="16" FontWeight="SemiBold" 
                                               Foreground="{StaticResource ModernAccentBrush}" Margin="0,0,0,15"/>
                                    
                                    <TextBlock Text="{DynamicResource Accounts_Identifier}" Margin="0,0,0,5" FontWeight="SemiBold"/>
                                    <TextBox Name="SetGmIdentifierTextBox" Padding="10,8" FontSize="14"/>
                                    
                                    <TextBlock Text="{DynamicResource Accounts_IdentifierType}" Margin="0,15,0,5" FontWeight="SemiBold"/>
                                    <ComboBox Name="SetGmIdentifierTypeComboBox" Padding="10,8" FontSize="14">
                                        <ComboBoxItem Content="{DynamicResource Accounts_Username_Identifier}" IsSelected="True"/>
                                        <ComboBoxItem Content="{DynamicResource Accounts_UserID_Identifier}"/>
                                    </ComboBox>
                                    
                                    <TextBlock Text="{DynamicResource Accounts_Action}" Margin="0,15,0,5" FontWeight="SemiBold"/>
                                    <ComboBox Name="SetGmActionComboBox" Padding="10,8" FontSize="14">
                                        <ComboBoxItem Content="{DynamicResource Accounts_GrantGM}" IsSelected="True"/>
                                        <ComboBoxItem Content="{DynamicResource Accounts_RevokeGM}"/>
                                    </ComboBox>
                                    
                                    <Button Content="{DynamicResource Accounts_SetGMStatus_Button}" 
                                            Name="SetGmStatusButton" Click="SetGmStatusButton_Click" 
                                            Margin="0,20,0,0" Padding="12,10"
                                            Background="{StaticResource ModernInfoBrush}"/>
                                    
                                    <TextBlock Name="SetGmStatusTextBlock" Margin="0,10,0,0" 
                                               FontWeight="SemiBold" TextWrapping="Wrap" FontSize="13"/>
                                </StackPanel>
                            </Border>

                            <!-- Delete Account -->
                            <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource ModernCard}" 
                                    Padding="20" Margin="0,20,0,0">
                                <StackPanel>
                                    <TextBlock Text="{DynamicResource Accounts_DeleteAccount}" FontSize="16" FontWeight="SemiBold" 
                                               Foreground="{StaticResource ModernErrorBrush}" Margin="0,0,0,15"/>
                                    
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="150"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Column="0" Text="{DynamicResource Accounts_Identifier}" 
                                                   VerticalAlignment="Center" Margin="0,0,10,0" FontWeight="SemiBold"/>
                                        <TextBox Grid.Column="1" Name="DeleteUserIdentifierTextBox" 
                                                 Padding="10,8" FontSize="14" VerticalAlignment="Center"/>
                                        
                                        <TextBlock Grid.Column="2" Text="{DynamicResource Accounts_Type}" 
                                                   VerticalAlignment="Center" Margin="20,0,10,0" FontWeight="SemiBold"/>
                                        <ComboBox Grid.Column="3" Name="DeleteUserIdentifierTypeComboBox" 
                                                  Padding="10,8" FontSize="14" VerticalAlignment="Center">
                                            <ComboBoxItem Content="{DynamicResource Accounts_Username_Identifier}" IsSelected="True"/>
                                            <ComboBoxItem Content="{DynamicResource Accounts_UserID_Identifier}"/>
                                        </ComboBox>
                                        
                                        <Button Grid.Column="4" Content="{DynamicResource Accounts_DeleteAccount_Button}" 
                                                Name="DeleteUserButton" Click="DeleteUserButton_Click" 
                                                Margin="20,0,0,0" Padding="15,8"
                                                Background="{StaticResource ModernErrorBrush}"/>
                                    </Grid>
                                    
                                    <TextBlock Name="DeleteUserStatusTextBlock" Margin="0,15,0,0" 
                                               FontWeight="SemiBold" TextWrapping="Wrap" FontSize="13"/>
                                </StackPanel>
                            </Border>
                        </Grid>

                        <!-- Browse Accounts Section -->
                        <Border Style="{StaticResource ModernCard}" Margin="0,20,0,0" Padding="20">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                
                                <!-- Header -->
                                <Grid Grid.Row="0" Margin="0,0,0,15">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBlock Grid.Column="0" Text="{DynamicResource Accounts_BrowseAccounts}" 
                                               FontSize="18" FontWeight="Bold" 
                                               Foreground="{StaticResource ModernAccentBrush}"/>
                                    
                                    <Button Grid.Column="1" Content="{DynamicResource Accounts_RefreshList}" 
                                            Name="BrowseAccountsRefreshButton" Click="BrowseAccountsRefreshButton_Click" 
                                            Padding="15,8" Style="{StaticResource AccentButtonStyle}"/>
                                </Grid>
                                
                                <!-- Accounts List -->
                                <Border Grid.Row="1" BorderBrush="{StaticResource ModernBorderBrush}" 
                                        BorderThickness="1" CornerRadius="4">
                                    <ListView Name="BrowseAccountsListView" 
                                              MaxHeight="400" 
                                              Background="Transparent" 
                                              BorderThickness="0">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header="{DynamicResource Accounts_Col_ID}" 
                                                                DisplayMemberBinding="{Binding Id}" Width="80"/>
                                                <GridViewColumn Header="{DynamicResource Accounts_Col_Name}" 
                                                                DisplayMemberBinding="{Binding Name}" Width="200"/>
                                                <GridViewColumn Header="{DynamicResource Accounts_Col_Email}" 
                                                                DisplayMemberBinding="{Binding Email}" Width="250"/>
                                                <GridViewColumn Header="{DynamicResource Accounts_Col_Created}" 
                                                                DisplayMemberBinding="{Binding CreateTime, StringFormat='yyyy-MM-dd HH:mm'}" 
                                                                Width="180"/>
                                                <GridViewColumn Header="{DynamicResource Accounts_Col_GM}" Width="80">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <CheckBox IsChecked="{Binding IsGm}" IsEnabled="False" 
                                                                      HorizontalAlignment="Center"/>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                </Border>
                            </Grid>
                        </Border>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="{DynamicResource Tab_MapManagement}" x:Name="MapManagementTab">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,0,0,10">
                        <Button Content="{DynamicResource Maps_AddNewMap}" x:Name="AddNewMapButton" Click="AddNewMapButton_Click" Margin="0,0,5,0" Padding="5"/>
                        <Button Content="{DynamicResource Maps_DeleteSelectedMap}" x:Name="DeleteMapButton" Click="DeleteMapButton_Click" Margin="0,0,5,0" Padding="5"/>
                        <Button Content="{DynamicResource Maps_SaveMapConfigs}" x:Name="SaveMapConfigurationsButton" Click="SaveMapConfigurationsButton_Click" Margin="0,0,10,0" Padding="5"/>
                        <Button Content="{DynamicResource Maps_ReloadAndRefresh}" x:Name="ReloadMapsListButton" Click="ReloadMapsListButton_Click" Padding="5"/>
                    </StackPanel>

                    <DataGrid Grid.Row="1" x:Name="MapsDataGrid" ItemsSource="{Binding DisplayableMaps}" AutoGenerateColumns="False" 
                              CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Single"
                              HeadersVisibility="Column" GridLinesVisibility="Horizontal" BorderBrush="LightGray" BorderThickness="1">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="{DynamicResource Maps_Col_AutoStart}" Binding="{Binding IsEnabledForAutoStart, Mode=TwoWay}" Width="100"/>
                            <DataGridTextColumn Header="{DynamicResource Maps_Col_MapID}" Binding="{Binding MapId, Mode=TwoWay}" Width="SizeToCells" MinWidth="100"/>
                            <DataGridTextColumn Header="{DynamicResource Maps_Col_MapName}" Binding="{Binding MapName, Mode=TwoWay}" Width="*" MinWidth="150"/>
                            <DataGridTemplateColumn Header="{DynamicResource Maps_Col_CurrentStatus}" Width="SizeToCells" MinWidth="100" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding IsCurrentlyRunning, Converter={StaticResource BooleanToRunningStatusConverter}}" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="{DynamicResource Maps_Col_Actions}" Width="120" MinWidth="120">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Button Content="{DynamicResource Maps_Start}" CommandParameter="{Binding}" Click="StartIndividualMapButton_Click" 
                                                    IsEnabled="{Binding IsCurrentlyRunning, Converter={StaticResource InverseBooleanConverter}}" Margin="0,0,5,0" Padding="3"/>
                                            <Button Content="{DynamicResource Maps_Stop}" CommandParameter="{Binding}" Click="StopIndividualMapButton_Click" 
                                                    IsEnabled="{Binding IsCurrentlyRunning}" Padding="3"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>

            <TabItem Header="{DynamicResource Tab_CharacterEditor}" x:Name="CharacterEditorTab">
                <local:CharacterEditorViewThemed x:Name="CharacterEditorViewControl"/>
            </TabItem>

        </TabControl>
        
        <!-- Notification Container -->
        <Grid x:Name="NotificationContainer" 
              Grid.Row="1"
              IsHitTestVisible="False"
              VerticalAlignment="Top"
              HorizontalAlignment="Right"/>
        </Grid>
    </Border>
</Window>