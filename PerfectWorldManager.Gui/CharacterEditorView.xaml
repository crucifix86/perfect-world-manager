<UserControl x:Class="PerfectWorldManager.Gui.CharacterEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PerfectWorldManager.Gui"
             xmlns:vm="clr-namespace:PerfectWorldManager.Gui.ViewModels;assembly=PerfectWorldManager.Gui"
             xmlns:models="clr-namespace:PerfectWorldManager.Core.Models;assembly=PerfectWorldManager.Core"
             xmlns:converters="clr-namespace:PerfectWorldManager.Gui.Converters"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=vm:CharacterEditorViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="700" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:StringPathToImageSourceConverter x:Key="PathToImageConverter"/>
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <converters:BooleanToHeightConverter x:Key="BooleanToHeightConverterForTextArea" TrueHeight="60" FalseHeight="25"/>
            <converters:NullToBooleanConverter x:Key="NullToTrueConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Vertical" Margin="5">
            <StackPanel Orientation="Horizontal">
                <Label Content="{DynamicResource CharacterEditor_CharacterIDLabel}" VerticalAlignment="Center"/>
                <TextBox Text="{Binding CharacterId, UpdateSourceTrigger=PropertyChanged}" Width="100" Margin="5,0" VerticalAlignment="Center"/>
                <Button Content="{DynamicResource CharacterEditor_LoadCharacterButton}" Command="{Binding LoadCharacterCommand}" Margin="5,0" IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}"/>
                <Button Content="{DynamicResource CharacterEditor_RefreshCharacterButton}" Command="{Binding RefreshCharacterCommand}" Margin="5,0" IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}"/>
                <Button Content="{DynamicResource CharacterEditor_SaveCharacterButton}" Command="{Binding SaveCharacterCommand}" Margin="5,0" IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}"/>
                <TextBlock Text="{Binding StatusMessage}" Margin="10,0" VerticalAlignment="Center" Foreground="OrangeRed" TextWrapping="Wrap"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                <Button Content="{DynamicResource CharacterEditor_SyncGuiToXmlButton}" Command="{Binding SyncGuiToXmlCommand}" Margin="5,0" ToolTip="Updates the Raw XML view from any changes made in the GUI Editor." IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}"/>
                <Button Content="{DynamicResource CharacterEditor_SyncXmlToGuiButton}" Command="{Binding SyncXmlToGuiCommand}" Margin="5,0" ToolTip="Reloads the GUI Editor from the content of the Raw XML view." IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}"/>
            </StackPanel>
        </StackPanel>

        <TabControl Grid.Row="1" Margin="5" Name="EditorModeTabControl" SelectionChanged="EditorModeTabControl_SelectionChanged">
                <TabItem Header="{DynamicResource CharacterEditor_TabGuiEditor}" x:Name="GuiEditorTab">
                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                        <Grid>
                            <TabControl DataContext="{Binding CurrentCharacterVm}" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
                                <TabItem Header="{DynamicResource CharacterEditor_TabBaseInfo}">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <ItemsControl ItemsSource="{Binding BaseInfo.Variables}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type models:CharacterVariableVm}">
                                                    <StackPanel Orientation="Horizontal" Margin="2">
                                                        <Label Content="{Binding Name, StringFormat='{}{0}:'}" MinWidth="120"/>
                                                        <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                 MinWidth="200" MaxWidth="400"
                                                                 AcceptsReturn="{Binding IsLongText}"
                                                                 TextWrapping="Wrap"
                                                                 Height="{Binding IsLongText, Converter={StaticResource BooleanToHeightConverterForTextArea}}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ScrollViewer>
                                </TabItem>
                                <TabItem Header="{DynamicResource CharacterEditor_TabStatusInfo}">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <ItemsControl ItemsSource="{Binding StatusInfo.Variables}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type models:CharacterVariableVm}">
                                                    <StackPanel Orientation="Horizontal" Margin="2">
                                                        <Label Content="{Binding Name, StringFormat='{}{0}:'}" MinWidth="120"/>
                                                        <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="200" MaxWidth="400" AcceptsReturn="{Binding IsLongText}" TextWrapping="Wrap" Height="{Binding IsLongText, Converter={StaticResource BooleanToHeightConverterForTextArea}}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ScrollViewer>
                                </TabItem>
                                <TabItem Header="{DynamicResource CharacterEditor_TabInventoryAndSafe}">
                                    <Grid>
                                        <Grid.Background>
                                            <ImageBrush ImageSource="pack://application:,,,/PerfectWorldManager.Gui;component/Assets/inv.png"
                                                        Stretch="None"
                                                        AlignmentX="Left"
                                                        AlignmentY="Top"/>
                                        </Grid.Background>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="300"/>
                                        </Grid.ColumnDefinitions>

                                        <ScrollViewer Grid.Column="0" 
                                                      VerticalScrollBarVisibility="Auto" 
                                                      HorizontalScrollBarVisibility="Disabled"
                                                      MaxHeight="450">
                                            <StackPanel Margin="20">
                                                <TextBlock Text="{DynamicResource CharacterEditor_EquipmentLabel}" FontWeight="Bold" Foreground="White"/>
                                                <ItemsControl ItemsSource="{Binding Equipment.Items}" Margin="0,0,0,10" Width="370">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel Orientation="Horizontal"/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate DataType="{x:Type models:InventoryItemVm}">
                                                            <Border BorderBrush="DarkGray" BorderThickness="1" Margin="1" Background="#44000000">
                                                                <Image Source="{Binding IconPath, Converter={StaticResource PathToImageConverter}}" Width="38" Height="38" Margin="2" ToolTip="{Binding ItemName}" Cursor="Hand">
                                                                    <Image.InputBindings>
                                                                        <MouseBinding MouseAction="LeftClick" Command="{Binding DataContext.SelectInventoryItemCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
                                                                    </Image.InputBindings>
                                                                </Image>
                                                            </Border>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>

                                                <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                                                    <TextBlock Text="{DynamicResource CharacterEditor_PocketMoneyLabel}" VerticalAlignment="Center" Margin="0,0,5,0" FontWeight="Bold" Foreground="White"/>
                                                    <TextBox Width="100"
                                                             Text="{Binding PocketInfo.Money, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                             IsEnabled="{Binding DataContext.CurrentCharacterVm, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource NullToTrueConverter}}"
                                                             Background="#FF555555" Foreground="White" BorderBrush="#FF777777"/>
                                                </StackPanel>
                                                <TextBlock Text="{DynamicResource CharacterEditor_PocketItemsLabel}" FontWeight="Bold" Foreground="White"/>
                                                <ItemsControl ItemsSource="{Binding PocketInfo.Items}" Margin="0,0,0,10" Width="370">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel Orientation="Horizontal"/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate DataType="{x:Type models:InventoryItemVm}">
                                                            <Border BorderBrush="DarkGray" BorderThickness="1" Margin="1" Background="#44000000">
                                                                <Image Source="{Binding IconPath, Converter={StaticResource PathToImageConverter}}" Width="38" Height="38" Margin="2" ToolTip="{Binding ItemName}" Cursor="Hand">
                                                                    <Image.InputBindings>
                                                                        <MouseBinding MouseAction="LeftClick" Command="{Binding DataContext.SelectInventoryItemCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
                                                                    </Image.InputBindings>
                                                                </Image>
                                                            </Border>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>

                                                <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                                                    <TextBlock Text="{DynamicResource CharacterEditor_StorehouseMoneyLabel}" VerticalAlignment="Center" Margin="0,0,5,0" FontWeight="Bold" Foreground="White"/>
                                                    <TextBox Width="100"
                                                             Text="{Binding StorehouseInfo.Money, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                             IsEnabled="{Binding DataContext.CurrentCharacterVm, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource NullToTrueConverter}}"
                                                             Background="#FF555555" Foreground="White" BorderBrush="#FF777777"/>
                                                </StackPanel>
                                                <TextBlock Text="{DynamicResource CharacterEditor_StorehouseItemsLabel}" FontWeight="Bold" Foreground="White"/>
                                                <ItemsControl ItemsSource="{Binding StorehouseInfo.Items}" Width="370">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel Orientation="Horizontal"/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate DataType="{x:Type models:InventoryItemVm}">
                                                            <Border BorderBrush="DarkGray" BorderThickness="1" Margin="1" Background="#44000000">
                                                                <Image Source="{Binding IconPath, Converter={StaticResource PathToImageConverter}}" Width="38" Height="38" Margin="2" ToolTip="{Binding ItemName}" Cursor="Hand">
                                                                    <Image.InputBindings>
                                                                        <MouseBinding MouseAction="LeftClick" Command="{Binding DataContext.SelectInventoryItemCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
                                                                    </Image.InputBindings>
                                                                </Image>
                                                            </Border>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </StackPanel>
                                        </ScrollViewer>

                                        <Border Grid.Column="1" Background="#EE3c3c3c" Padding="10" Margin="5,0,0,0"
                                                Visibility="{Binding DataContext.SelectedInventoryItem, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource NullToVisibilityConverter}}">
                                            <ScrollViewer VerticalScrollBarVisibility="Auto" DataContext="{Binding DataContext.SelectedInventoryItem, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                                                <StackPanel>
                                                    <TextBlock Text="{Binding ItemName, StringFormat='{}{DynamicResource CharacterEditor_DetailsForItemLabelPart}{0}'}" FontWeight="Bold" FontSize="14" Margin="0,0,0,10" Foreground="White"/>
                                                    <ItemsControl ItemsSource="{Binding Variables}">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate DataType="{x:Type models:CharacterVariableVm}">
                                                                <StackPanel Orientation="Vertical" Margin="0,2">
                                                                    <Label Content="{Binding Name, StringFormat='{}{0}:'}" Padding="0" Foreground="LightGray"/>
                                                                    <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                             AcceptsReturn="{Binding IsLongText}" TextWrapping="Wrap"
                                                                             Height="{Binding IsLongText, Converter={StaticResource BooleanToHeightConverterForTextArea}}"
                                                                             Background="#FF555555" Foreground="White" BorderBrush="#FF777777"/>
                                                                </StackPanel>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </StackPanel>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="{DynamicResource CharacterEditor_TabTaskInfo}">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <ItemsControl ItemsSource="{Binding TaskInfo.Variables}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type models:CharacterVariableVm}">
                                                    <StackPanel Orientation="Horizontal" Margin="2">
                                                        <Label Content="{Binding Name, StringFormat='{}{0}:'}" MinWidth="120"/>
                                                        <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="200" MaxWidth="400" AcceptsReturn="{Binding IsLongText}" TextWrapping="Wrap" Height="{Binding IsLongText, Converter={StaticResource BooleanToHeightConverterForTextArea}}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ScrollViewer>
                                </TabItem>
                            </TabControl>
                        </Grid>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{DynamicResource CharacterEditor_TabRawXmlEditor}" x:Name="RawXmlEditorTab">
                    <TextBox Text="{Binding CharacterXml, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             AcceptsReturn="True" AcceptsTab="True"
                             VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                             FontFamily="Consolas" FontSize="12"
                             Background="#FF2d2d2d" Foreground="LightGray" BorderBrush="#FF555555"/>
                </TabItem>

                <TabItem Header="{DynamicResource CharacterEditor_TabPlayerCharacters}" x:Name="PlayerCharactersTab" IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}">
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,0,0,10">
                            <TextBlock Text="{DynamicResource CharacterEditor_PlayerUserIDLabel}" VerticalAlignment="Center" Margin="0,0,5,0"/>
                            <TextBox Text="{Binding SearchPlayerIdText, UpdateSourceTrigger=PropertyChanged}" MinWidth="120" VerticalAlignment="Center"
                                     ToolTipService.ToolTip="Enter the numeric User ID of the player."/>
                            <Button Content="{DynamicResource CharacterEditor_SearchCharactersButton}" Command="{Binding SearchPlayerCharactersCommand}" Margin="10,0,0,0" Padding="10,5"/>
                        </StackPanel>

                        <TextBlock Grid.Row="1" Text="{Binding PlayerCharactersStatusMessage}" Margin="0,5,0,10" FontStyle="Italic" TextWrapping="Wrap"/>

                        <DataGrid Grid.Row="2" ItemsSource="{Binding PlayerCharactersList}" AutoGenerateColumns="False" IsReadOnly="True" CanUserAddRows="False"
                                  HeadersVisibility="Column" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                                  AlternatingRowBackground="#FF444444" RowBackground="#FF383838" Foreground="White" BorderBrush="DarkGray" GridLinesVisibility="Horizontal">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Padding" Value="5"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#FF5E5E5E"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="Background" Value="#FF505050"/>
                                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                                    <Setter Property="BorderBrush" Value="DarkGray"/>
                                    <Setter Property="BorderThickness" Value="0,0,1,1"/>
                                    <Setter Property="Padding" Value="5"/>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{DynamicResource CharacterEditor_ColCharID}" Binding="{Binding RoleId}" Width="Auto" MinWidth="150"/>
                                <DataGridTextColumn Header="{DynamicResource CharacterEditor_ColCharName}" Binding="{Binding RoleName}" Width="*" MinWidth="200"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>

            </TabControl>
        
        <Border Background="#7F000000" 
                Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}" 
                Grid.Row="0"
                Grid.RowSpan="2"
                Panel.ZIndex="1000">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="{DynamicResource CharacterEditor_LoadingText}" Foreground="White" FontSize="18" Margin="0,0,0,10"/>
                <ProgressBar IsIndeterminate="True" Width="200" Height="20"/>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>